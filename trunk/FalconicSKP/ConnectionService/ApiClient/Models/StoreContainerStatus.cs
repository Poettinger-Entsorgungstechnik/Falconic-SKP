// <auto-generated />

namespace Falconic.Skp.Api.Client.Models
{
    using Falconic.Skp;
    using Falconic.Skp.Api;
    using Falconic.Skp.Api.Client;
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class StoreContainerStatus
    {
        /// <summary>
        /// Initializes a new instance of the StoreContainerStatus class.
        /// </summary>
        public StoreContainerStatus()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the StoreContainerStatus class.
        /// </summary>
        public StoreContainerStatus(string simCardNumber, int code, System.DateTime timestamp, int? locationId = default(int?), int? statusTypeId = default(int?), double? fillState = default(double?))
        {
            LocationId = locationId;
            SimCardNumber = simCardNumber;
            Code = code;
            StatusTypeId = statusTypeId;
            FillState = fillState;
            Timestamp = timestamp;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "locationId")]
        public int? LocationId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "simCardNumber")]
        public string SimCardNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "code")]
        public int Code { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "statusTypeId")]
        public int? StatusTypeId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "fillState")]
        public double? FillState { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "timestamp")]
        public System.DateTime Timestamp { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (SimCardNumber == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "SimCardNumber");
            }
            if (SimCardNumber != null)
            {
                if (SimCardNumber.Length > 255)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "SimCardNumber", 255);
                }
                if (SimCardNumber.Length < 0)
                {
                    throw new ValidationException(ValidationRules.MinLength, "SimCardNumber", 0);
                }
            }
        }
    }
}
